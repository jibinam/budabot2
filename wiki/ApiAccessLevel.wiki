#summary The AccessLevel class provides functionality for checking character's level of access.


=Class !AccessLevel=


The AccessLevel class provides functionality for checking character's level
of access.

Lond description here.


{{{
There is an instance of this class with name 'accesslevel' available.
You can include it into a module via injection:
	/** @Inject */
	public $accesslevel;
Or:
	/** @Inject("accesslevel") */
	public $someVariableName;
}}}







==Methods==
[#boolean_checkAccess_(_string_$sender_,_string_$accessLevel_) checkAccess]

[#checkSingleAccess_(_mixed_$sender_,_mixed_$accessLevel_) checkSingleAccess]

[#normalizeAccessLevel_(_mixed_$accessLevel_) normalizeAccessLevel]

[#getDisplayName_(_mixed_$accessLevel_) getDisplayName]

[#getSingleAccessLevel_(_mixed_$sender_) getSingleAccessLevel]

[#getAccessLevelForCharacter_(_mixed_$sender_) getAccessLevelForCharacter]

[#checkGuildAdmin_(_mixed_$sender_,_mixed_$accessLevel_) checkGuildAdmin]

[#compareAccessLevels_(_mixed_$accessLevel1_,_mixed_$accessLevel2_) compareAccessLevels]

[#compareCharacterAccessLevels_(_mixed_$char1_,_mixed_$char2_) compareCharacterAccessLevels]


==Methods Documentation==

===boolean checkAccess ( string <var>$sender</var>, string <var>$accessLevel</var> )===





<h4>Parameters</h4>
<var>$sender</var><br />
string$sender - the name of the person you want to check access on<br />
<var>$accessLevel</var><br />
string$accessLevel - can be one of: superadmin, admininistrator, moderator,
raidleader, guild, member, all<br />

<h4>Returns</h4>
booleantrue if $sender has at least $accessLevel, false otherwise<br />





===checkSingleAccess ( mixed <var>$sender</var>, mixed <var>$accessLevel</var> )===











===normalizeAccessLevel ( mixed <var>$accessLevel</var> )===











===getDisplayName ( mixed <var>$accessLevel</var> )===











===getSingleAccessLevel ( mixed <var>$sender</var> )===











===getAccessLevelForCharacter ( mixed <var>$sender</var> )===











===checkGuildAdmin ( mixed <var>$sender</var>, mixed <var>$accessLevel</var> )===











===compareAccessLevels ( mixed <var>$accessLevel1</var>, mixed <var>$accessLevel2</var> )===







<h4>Description:</h4>
<div class="list">
Returns a positive number if $accessLevel1 is a greater access level than
$accessLevel2, a negative number if $accessLevel1 is a lesser access level than
$accessLevel2, and 0 if the access levels are equal.<br />
</div>




===compareCharacterAccessLevels ( mixed <var>$char1</var>, mixed <var>$char2</var> )===











==Properties summary==


public static 
array
<var>$ACCESS_LEVELS</var> = array('none' => 0, 'superadmin' => 1,  'admin' => 2, 'mod' => 3, 'rl' => 4, 'guild' => 6, 'member' => 7, 'all' => 8)


	<td class="name">
			<a href="null.html#11" title="Go to source code"><var>$ACCESS_LEVELS</var></a>
	</td>
	<td class="value"><code><span class="php-keyword1">array</span>(<span class="php-quote">'none'</span> =&gt; <span class="php-num">0</span>, <span class="php-quote">'superadmin'</span> =&gt; <span class="php-num">1</span>,  <span class="php-quote">'admin'</span> =&gt; <span class="php-num">2</span>, <span class="php-quote">'mod'</span> =&gt; <span class="php-num">3</span>, <span class="php-quote">'rl'</span> =&gt; <span class="php-num">4</span>, <span class="php-quote">'guild'</span> =&gt; <span class="php-num">6</span>, <span class="php-quote">'member'</span> =&gt; <span class="php-num">7</span>, <span class="php-quote">'all'</span> =&gt; <span class="php-num">8</span>)</code></td>
	<td class="description"><div>
		<a href="#$ACCESS_LEVELS" class="anchor">#</a>

		<div class="description short">
			
		</div>

		<div class="description detailed">
			

		</div>
	</div></td>

