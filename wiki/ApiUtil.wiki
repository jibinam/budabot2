#summary 

=Class !Util=

==Methods==
    * mixed [#mixed_bytes_convert_(_mixed_$bytes_) bytes_convert] ( mixed <var>$bytes</var> )
    * mixed [#mixed_unixtime_to_readable_(_mixed_$time_,_mixed_$show_seconds_= unixtime_to_readable] ( mixed <var>$time</var>, mixed <var>$show_seconds</var> = <span class="php-keyword1">true</span> )
    * mixed [#mixed_parseTime_(_mixed_$budatime_) parseTime] ( mixed <var>$budatime</var> )
    * mixed [#mixed_compare_version_numbers_(_mixed_$ver1_,_mixed_$ver2_) compare_version_numbers] ( mixed <var>$ver1</var>, mixed <var>$ver2</var> )
    * mixed [#mixed_get_profession_name_(_mixed_$search_) get_profession_name] ( mixed <var>$search</var> )
    * mixed [#mixed_get_profession_abbreviation_(_mixed_$profession_) get_profession_abbreviation] ( mixed <var>$profession</var> )
    * mixed [#mixed_verify_name_convention_(_mixed_$filename_) verify_name_convention] ( mixed <var>$filename</var> )
    * mixed [#mixed_verify_filename_(_mixed_$filename_) verify_filename] ( mixed <var>$filename</var> )
    * mixed [#mixed_get_ability_(_mixed_$ability_,_mixed_$getFullName_=_false get_ability] ( mixed <var>$ability</var>, mixed <var>$getFullName</var> = <span class="php-keyword1">false</span> )
    * mixed [#mixed_rand_array_value_(_mixed_$array_) rand_array_value] ( mixed <var>$array</var> )
    * mixed [#mixed_isValidSender_(_mixed_$sender_) isValidSender] ( mixed <var>$sender</var> )
    * mixed [#mixed_genRandomString_(_mixed_$length_=_10_) genRandomString] ( mixed <var>$length</var> = <span class="php-num">10</span> )
    * mixed [#mixed_getStackTrace_(_) getStackTrace] ( )
    * mixed [#mixed_httpGet_(_string_$uri_,_callable_$callback_,_mixed_$data_= httpGet] ( string <var>$uri</var>, callable <var>$callback</var>, mixed <var>$data</var> = <span class="php-keyword1">null</span> )

----
==Methods Documentation==

===mixed bytes_convert ( mixed <var>$bytes</var> )===

===mixed unixtime_to_readable ( mixed <var>$time</var>, mixed <var>$show_seconds</var> = <span class="php-keyword1">true</span> )===

===mixed parseTime ( mixed <var>$budatime</var> )===

===mixed compare_version_numbers ( mixed <var>$ver1</var>, mixed <var>$ver2</var> )===

Takes two version numbers.  Returns 1 if the first is greater than the second.
Returns -1 if the second is greater than the first.  Returns 0 if they are equal.

===mixed get_profession_name ( mixed <var>$search</var> )===

<h4>Description:</h4>
<div class="list">
returns the full profession name given the search string passed in<br />
</div>
<h4>Name:</h4>
<div class="list">
get_profession_name<br />
</div>

===mixed get_profession_abbreviation ( mixed <var>$profession</var> )===

===mixed verify_name_convention ( mixed <var>$filename</var> )===

<h4>Description:</h4>
<div class="list">
returns true if filename matches budabot naming convention and false otherwise<br />
</div>
<h4>Name:</h4>
<div class="list">
verify_name_convention<br />
</div>

===mixed verify_filename ( mixed <var>$filename</var> )===

<h4>Description:</h4>
<div class="list">
returns true if filename matches budabot naming convention and false otherwise<br />
</div>
<h4>Name:</h4>
<div class="list">
verify_filename<br />
</div>

===mixed get_ability ( mixed <var>$ability</var>, mixed <var>$getFullName</var> = <span class="php-keyword1">false</span> )===

===mixed rand_array_value ( mixed <var>$array</var> )===

===mixed isValidSender ( mixed <var>$sender</var> )===

===mixed genRandomString ( mixed <var>$length</var> = <span class="php-num">10</span> )===

===mixed getStackTrace ( )===

===mixed httpGet ( string <var>$uri</var>, callable <var>$callback</var>, mixed <var>$data</var> = <span class="php-keyword1">null</span> )===

Requests contents of given $uri and on completion calls $callback.

Uses GET HTTP method.

This method is asyncronous, the execution should return immediately
from this method. The callback will be called later on when the remote
server has responded.

You can get both HTTP and HTTPS URIs with method.

The callback has following signature:
<code>function callback($response, $data)</code>
 * $response - Response as an object, it has properties:
               $error: error message, if any
               $headers: received HTTP headers as an array
               $body: received contents
 * $data     - optional value which is same as given as argument to
               this method.

Example usage:
<code>
$this->util->httpGet( "http://www.google.com/", function($response) {
    print $response->body;
});
</code>

<h4>Parameters</h4>
    * <var>$uri</var> - 
    * <var>$callback</var> - 
    * <var>$data</var> - 


<br />
----
Budabot documentation generated by [http://apigen.org/ ApiGen 2.8.0] using [http://budabot2.googlecode.com/svn/trunk/docs/apigen_wiki_templates/ custom wiki templates].
